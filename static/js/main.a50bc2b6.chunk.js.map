{"version":3,"sources":["p2-homeworks/h2/Affair.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/AlternativeMessage.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h1/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","AlternativeMessage","props","messageData","map","alternativeMessageArray","index","className","s","message","key","avatar","src","alt","place","name","time","Message","HW1","Affair","priorityClass","cl","affair","priority","button","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","a","affairs","setFilter","defaultAffairs","HW2","useState","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","HW4","text","setText","showAlert","alert","checked","setChecked","column","blue","disabled","Greeting","setNameCallback","addUser","totalUsers","inputClass","input","greeting","onKeyDown","onBlur","GreetingContainer","users","addUserCallback","setName","setError","length","trimedName","trim","HW3","setUsers","user","v1","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.a50bc2b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"affairs\":\"Affair_affairs__ixp9W\",\"button\":\"Affair_button__Z32A5\",\"affair\":\"Affair_affair__26u9T\",\"high\":\"Affair_high__3UVb5\",\"middle\":\"Affair_middle__1D7d-\",\"low\":\"Affair_low__R3nCw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__Qb_sx\",\"avatar\":\"Message_avatar__xhTC7\",\"place\":\"Message_place__24OSo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorInput\":\"Greeting_errorInput__2n_6y\",\"error\":\"Greeting_error__3Nn3D\",\"input\":\"Greeting_input__2962w\",\"button\":\"Greeting_button__10gbM\",\"greeting\":\"Greeting_greeting__3xxLv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__3cOOG\",\"superInput\":\"SuperInputText_superInput__3khu6\",\"errorInput\":\"SuperInputText_errorInput__1aHtX\",\"error\":\"SuperInputText_error__2EyXb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2OTiA\",\"column\":\"HW4_column__1lb_C\",\"testSpanError\":\"HW4_testSpanError__BetVD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3tsUU\",\"red\":\"SuperButton_red__32fBE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2KIzs\",\"spanClassName\":\"SuperCheckbox_spanClassName__26Mas\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__31rDF\"};","import React from 'react'\r\nimport s from \"./Message.module.css\";\r\n\r\ntype AlternativeMessagePropsType = {\r\n    messageData: AlternativeMessageType[]\r\n}\r\n\r\ntype AlternativeMessageType = {\r\n    avatar: string,\r\n    name: string,\r\n    message: string,\r\n    time: string\r\n}\r\n\r\nexport function AlternativeMessage(props: AlternativeMessagePropsType) {\r\n    return (\r\n        <>\r\n            {props.messageData.map((alternativeMessageArray, index) => {\r\n                    return (\r\n                        <div className={s.message} key={index}>\r\n                            <div className={s.avatar}>\r\n                                <img src={alternativeMessageArray.avatar} alt=\"avatar\"/>\r\n                            </div>\r\n                            <div className={s.place}>\r\n                                <div>\r\n                                    <h3>{alternativeMessageArray.name}</h3>\r\n                                    <p>{alternativeMessageArray.message}</p>\r\n                                    <time>{alternativeMessageArray.time}</time>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\nimport s from './Message.module.css'\r\n\r\ntype MessagePropsType = {\r\n    avatar: string,\r\n    name: string,\r\n    message: string,\r\n    time: any\r\n}\r\n\r\nexport function Message(props: MessagePropsType) {\r\n    return (\r\n        <>\r\n            <div className={s.message}>\r\n                <div className={s.avatar}>\r\n                    <img src={props.avatar} alt=\"avatar\"/>\r\n                </div>\r\n                <div className={s.place}>\r\n                    <div>\r\n                        <h3>{props.name}</h3>\r\n                        <p>{props.message}</p>\r\n                        <time>{props.time}</time>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nimport {AlternativeMessage} from \"./AlternativeMessage\";\r\nimport {Message} from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Artem',\r\n    message: 'npm start нажимал?',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n                 />\r\n\r\n            {/*для личного творчества, могу проверить*/}\r\n            <hr/>\r\n            <AlternativeMessage messageData={[messageData]} />\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport cl from './Affair.module.css'\r\nimport {AffairType} from \"./HW2\";\r\n\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (id: number)=> void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}// need to fix\r\n\r\n    const priorityClass = cl[props.affair.priority]\r\n\r\n    return (\r\n        <div className={cl.affair}>\r\n            <div>{props.affair.name}</div>\r\n            <div className={priorityClass}>{props.affair.priority}</div>\r\n            <button className={cl.button} onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport cl from './Affair.module.css'\r\nimport {AffairType, FilterType} from './HW2'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: AffairType[],\r\n    setFilter: (filter: FilterType) => void,\r\n    deleteAffairCallback: (id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n\r\n    const setAll = () => {\r\n        props.setFilter('all')\r\n    } // need to fix\r\n    const setHigh = () => {\r\n        props.setFilter('high')\r\n    }\r\n    const setMiddle = () => {\r\n        props.setFilter('middle')\r\n    }\r\n    const setLow = () => {\r\n        props.setFilter(\"low\")\r\n    }\r\n\r\n    return (\r\n        <div className={cl.affairs}>\r\n\r\n            {mappedAffairs}\r\n            <div>\r\n                <button className={cl.button} onClick={setAll}>All</button>\r\n                <button className={cl.button} onClick={setHigh}>High</button>\r\n                <button className={cl.button} onClick={setMiddle}>Middle</button>\r\n                <button className={cl.button} onClick={setLow}>Low</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'low' | 'middle' // need to fix any\r\nexport type AffairType = { _id: number, name: string, priority:AffairPriorityType} // need to fix any\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: AffairType[] = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => { // need to fix any\r\n    if (filter === 'all') return affairs\r\n    else return affairs.filter(a => a.priority === filter) // need to fix\r\n}\r\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => { // need to fix any\r\n    return affairs.filter(a => a._id !== _id) // need to fix\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    onEnter: (e: KeyboardEvent<HTMLInputElement>) => void\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers, onEnter} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? s.errorInput : s.input // need to fix with (?:)\r\n\r\n    return (\r\n        <div className={s.greeting}>\r\n            <div>\r\n                <input className={inputClass} value={name} onChange={setNameCallback} onKeyDown={onEnter}\r\n                       onBlur={setNameCallback}/>\r\n                <div className={s.error}>{error}</div>\r\n            </div>\r\n            <button className={s.button} onClick={addUser} disabled={!name}>add</button>\r\n            <span>{totalUsers}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, useState, KeyboardEvent} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: UserType[], // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        const trimedName = e.currentTarget.value.trim()\r\n\r\n        if (trimedName) {\r\n            setName(trimedName)\r\n            setError('')\r\n        } else {\r\n            setName('') // need to fix\r\n            setError('name is require!')\r\n        }\r\n    }\r\n    const addUser = () => {\r\n        addUserCallback(name)\r\n        alert(`Hello your name is: ${name}`)// need to fix\r\n        setName('')\r\n    }\r\n\r\n    const onEnter = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter' && name) {\r\n            addUser()\r\n        }\r\n    }\r\n\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            onEnter={onEnter}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<UserType[]>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        const user = {\r\n            _id: v1(),\r\n            name,\r\n        }\r\n\r\n        setUsers([...users, user]) // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React from 'react'\r\nimport s from '../../p1-main/m1-ui/u1-app/App.module.css'\r\nimport HW1 from './HW1'\r\nimport HW2 from \"../h2/HW2\";\r\nimport HW4 from \"../h4/HW4\";\r\nimport HW3 from \"../h3/HW3\";\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p2-homeworks/h1/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}